Задача 1. 
У вас есть социальная сеть, где пользователи (id, имя) могут ставить друг другу лайки. 
Создайте необходимые таблицы для хранения данной информации. 
Создайте запрос, который выведет информацию:
  id пользователя;
  имя;
  лайков получено;
  лайков поставлено.
  Взаимные лайки.

#создаем бд
CREATE DATABASE `Social_network`;

CREATE TABLE IF NOT EXISTS `users` (
`id` INT NOT NULL  AUTO_INCREMENT,
`login` VARCHAR(25) NOT NULL,
PRIMARY KEY (`id`));

INSERT INTO `users` (`login`) 
VALUES ('Анеш'), ('Алина'), ('Игорь'), ('Юрий'), ('Валерий'), 
('Евгений'), ('Марк'), ('Анастасия'), ('Андрей'), ('Наталья');


/*CREATE TABLE IF NOT EXISTS `users_likes` (зр
`id` INT NOT NULL AUTO_INCREMENT,
`user1_id` INT NOT NULL,
`user2_id` INT NOT NULL,
`like_1_to_2` INT(1) NOT NULL DEFAULT '1', 
`like_2_to_1` INT(1) NOT NULL DEFAULT '0',
PRIMARY KEY (`id`));

ALTER TABLE `users_likes`
ADD FOREIGN KEY (`user1_id`) 
REFERENCES `users`(`id`) 
ON UPDATE CASCADE
ON DELETE RESTRICT,
ADD FOREIGN KEY (`user2_id`) 
REFERENCES `users`(`id`) 
ON UPDATE CASCADE
ON DELETE RESTRICT;

INSERT INTO `users_likes` (`user1_id`, `user2_id`) 
VALUES (1,2), (2,3), (4,8), (7,10), 
(9,10), (10,8), (1,5), (3,2), (1,4);

INSERT INTO `users_likes` (`user1_id`, `user2_id`, `like_2_to_1`) 
VALUES (3,4,1), (8,6,1), (7,2,1);
*/


CREATE TABLE IF NOT EXISTS `users_profiles` (
`id` INT NOT NULL AUTO_INCREMENT,
`user_id` INT NOT NULL,
`content` VARCHAR (100) NOT NULL,
PRIMARY KEY (`id`),
FOREIGN KEY (`user_id`) 
REFERENCES `users`(`id`) 
ON UPDATE CASCADE
ON DELETE RESTRICT);


CREATE TABLE IF NOT EXISTS `users_profiles_likes` (
`id` INT NOT NULL AUTO_INCREMENT,
`profile_id` INT NOT NULL,
`user_id` INT NOT NULL,
`recalled` INT(1) NULL DEFAULT NULL,
PRIMARY KEY (`id`),
FOREIGN KEY (`profile_id`) 
REFERENCES `users_profiles`(`id`) 
ON UPDATE CASCADE
ON DELETE RESTRICT,
FOREIGN KEY (`user_id`) 
REFERENCES `users`(`id`) 
ON UPDATE CASCADE
ON DELETE RESTRICT;

INSERT INTO `users_profiles` (`user_id`, `content`) 
VALUES (1,'Lorem ipsum dolor sit amet, consectetur adipiscing elit.'), 
(2, 'Sed eu velit sed sem viverra egestas at sollicitudin ligula.'), 
(3, 'Fusce odio elit, dapibus quis hendrerit viverra, tempus non ipsum.'), 
(4, 'Mauris vel varius ex. Nullam lorem est.'), 
(5, 'Duis euismod ante orci, eget eleifend quam vestibulum non.'), 
(6, 'Praesent non posuere risus, id eleifend velit.'), 
(7, 'Sed commodo eu leo eu maximus.'), 
(8, 'Donec lobortis, mauris eget fringilla iaculis, lectus quam porta velit, ut luctus tellus.'), 
(9, 'Maecenas rhoncus turpis porttitor libero iaculis, at feugiat ex tempus.'),
(10, 'Nullam et lorem elit. Nam ante tortor, convallis vitae quam tempus, laoreet mollis diam.');

INSERT INTO `users_profiles_likes` (`user_id`, `profile_id`) 
VALUES (1, 2), (2, 5), (5, 2), (4, 2), (2, 4), (7, 3);


mysql> USE Social_network;

Database changed








#запросы
#со всех бд?!
#id пользователя; имя; лайков получено; лайков поставлено.

mysql> USE Social_network;

Database changed

mysql> SELECT `users`.`id`, `users`.`login` AS 'имя', 
SUM( 
  (`users_likes`.`user1_id` = `users`.`id` 
    AND 
    `users_likes`.`like_1_to_2` = 1) 
  OR 
  (`users_likes`.`user2_id` = `users`.`id` 
    AND 
    `users_likes`.`like_2_to_1` = 1) 
) AS 'лайков поставлено',
SUM( 
  (`users_likes`.`user2_id` = `users`.`id` 
    AND 
    `users_likes`.`like_1_to_2` = 1) 
  OR 
  (`users_likes`.`user1_id` = `users`.`id` 
    AND 
    `users_likes`.`like_2_to_1` = 1) 
) AS 'лайков получено' 
FROM `users` INNER JOIN `users_likes` 
GROUP BY `users`.`id`; 

+----+-----------+-------------------+-----------------+
| id | имя       | лайков поставлено | лайков получено |
+----+-----------+-------------------+-----------------+
|  1 | Анеш      |                 3 |               0 |
|  2 | Алина     |                 2 |               2 |
|  3 | Игорь     |                 1 |               2 |
|  4 | Юрий      |                 2 |               2 |
|  5 | Валерий   |                 0 |               1 |
|  6 | Евгений   |                 1 |               1 |
|  7 | Марк      |                 2 |               1 |
|  8 | Анастасия |                 1 |               3 |
|  9 | Андрей    |                 1 |               0 |
| 10 | Наталья   |                 1 |               2 |
+----+-----------+-------------------+-----------------+
10 rows in set (0.00 sec)

#Если по умолчанию первым записывать пользователя,
поставившего лайк, а, если ему поставят ответный лайк,
уже существующую запись в бд обновлять, можно сократить предыдущий SELECT

mysql> SELECT `users`.`id`, `users`.`login` AS 'имя', 
SUM( 
  (`users_likes`.`user1_id` = `users`.`id`) 
  OR
  (`users_likes`.`user2_id` = `users`.`id`
  AND 
  `like_2_to_1` = 1)
) AS 'лайков поставлено',
SUM( 
  (`users_likes`.`user2_id` = `users`.`id`) 
  OR
  (`users_likes`.`user1_id` = `users`.`id`
  AND 
  `like_2_to_1` = 1)
) AS 'лайков получено'
FROM `users` INNER JOIN `users_likes` 
GROUP BY `users`.`id`;

+----+-----------+-------------------+-----------------+
| id | имя       | лайков поставлено | лайков получено |
+----+-----------+-------------------+-----------------+
|  1 | Анеш      |                 3 |               0 |
|  2 | Алина     |                 2 |               2 |
|  3 | Игорь     |                 1 |               2 |
|  4 | Юрий      |                 2 |               2 |
|  5 | Валерий   |                 0 |               1 |
|  6 | Евгений   |                 1 |               1 |
|  7 | Марк      |                 2 |               1 |
|  8 | Анастасия |                 1 |               3 |
|  9 | Андрей    |                 1 |               0 |
| 10 | Наталья   |                 1 |               2 |
+----+-----------+-------------------+-----------------+
10 rows in set (0.00 sec)


#Взаимные лайки.


#lwt2s try...


mysql> SELECT `users_profiles`.`user_id` AS 'owner', `users_profiles_likes`.`profile_id`,
 `users_profiles_likes`.`user_id` AS 'user'
 FROM  `users_profiles_likes` INNER JOIN `users_profiles`
WHERE `users_profiles`.`id` = `users_profiles_likes`.`profile_id`
AND

`users_profiles_likes`.`user_id` = `users_profiles`.`user_id`


;



;



#lwt2s try...





mysql> SELECT `users_likes`.`id`, `user1_id`, `user2_id`
FROM `users_likes`
WHERE `like_2_to_1` = 1
AND `like_1_to_2` = 1;

+----+----------+----------+
| id | user1_id | user2_id |
+----+----------+----------+
| 11 |        3 |        4 |
| 12 |        8 |        6 |
| 13 |        7 |        5 |
+----+----------+----------+
3 rows in set (0.00 sec)

mysql> SELECT `users_likes`.`id` AS 'id Взаимного лайка', 
`users`.`login` AS 'Пользователь'
FROM `users` INNER JOIN `users_likes`
WHERE `like_2_to_1` = 1
AND `like_1_to_2` = 1
AND (`users`.`id` = `user1_id`
OR `users`.`id` = `user2_id`);

+--------------------+--------------+
| id Взаимного лайка | Пользователь |
+--------------------+--------------+
|                 11 | Игорь        |
|                 11 | Юрий         |
|                 12 | Евгений      |
|                 12 | Анастасия    |
|                 13 | Валерий      |
|                 13 | Марк         |
+--------------------+--------------+
6 rows in set (0.00 sec)



Задача 2. 
Для структуры из задачи 1 выведите список всех пользователей, 
которые поставили лайк пользователям A и B (id задайте произвольно), 
но при этом не поставили лайк пользователю C.




#id пользователя A = 2, id пользователя B = 5, id пользователя C = 4, 

INSERT INTO `users_likes` (`id_user1`, `id_user2`) 
VALUES (4,5), (4,2), (3,5);


#1,- 7,
4

mysql> SELECT `users`.`id`, `users`.`login` AS 'имя'
FROM `users` INNER JOIN `users_likes` 
WHERE( 
  (`users`.`id` = `id_user1`
    AND `users_likes`.`id_user2` IN (2, 5)
    AND `users_likes`.`like_1_to_2` = 1)
  OR
  (`users`.`id` = `id_user2`
    AND `users_likes`.`id_user1` IN (2, 5) 
    AND `users_likes`.`like_2_to_1` = 1)
)    
;

AND (SUM(`users`.`id` = `id_user2`) = 2
OR SUM(`users`.`id` = `id_user2`) = 2
OR SUM(`users`.`id` = `id_user2`) + SUM(`users`.`id` = `id_user2`) = 2);





AND
((`users`.`id` = `id_user1`
AND `users_likes`.`id_user2` = 5 
AND `users_likes`.`like_1_to_2` = 1)
OR
(`users`.`id` = `id_user2`
AND `users_likes`.`id_user1` = 5 
AND `users_likes`.`like_2_to_1` = 1))

AND
((`users_likes`.`id_user2` = 5 AND `users_likes`.`like_2_to_1` = 1)
OR (`users_likes`.`id_user1` = 5 AND `users_likes`.`like_1_to_2` = 1))
AND
((`users_likes`.`id_user2` = 4 AND `users_likes`.`like_2_to_1` = 0)
OR (`users_likes`.`id_user1` = 4 AND `users_likes`.`like_1_to_2` = 0)); 


#1,- 7,
4 => 
===
SELECT `users`.`id`, `users`.`login` AS 'имя', 
CASE 
WHEN (`users_likes`.`id_user2` = 2 AND
`users`.`id` = `id_user1`
AND `users_likes`.`like_1_to_2` = 1)
THEN 'yes' 
END AS 'answer' 
FROM `users` INNER JOIN `users_likes`
WHERE SUBSTRING('answer',0,3) = 'yes';


WHERE( 
  (`users`.`id` = `id_user1`
    AND `users_likes`.`id_user2` IN (2, 5)
    AND `users_likes`.`like_1_to_2` = 1)
  OR
  (`users`.`id` = `id_user2`
    AND `users_likes`.`id_user1` IN (2, 5) 
    AND `users_likes`.`like_2_to_1` = 1)
==



Задача 3. 
Добавим сущности «Фотография» и «Комментарии к фотографии». 
Нужно создать функционал для пользователей, который позволяет ставить 
лайки не только пользователям, но и фото или комментариям к фото. 
Учитывайте следующие ограничения:
  пользователь не может дважды лайкнуть одну и ту же сущность;
  пользователь имеет право отозвать лайк;
  необходимо иметь возможность считать число полученных сущностью лайков 
  и выводить список пользователей, поставивших лайки;
  в будущем могут появиться новые виды сущностей, которые можно лайкать.

# + сущность "Фотография"

CREATE TABLE IF NOT EXISTS `photos` (
`id` INT NOT NULL  AUTO_INCREMENT,
`name` VARCHAR(25) NOT NULL,
`owner_id` INT NOT NULL,
PRIMARY KEY (`id`),
FOREIGN KEY (`owner_id`) 
REFERENCES `users`(`id`) 
ON UPDATE CASCADE
ON DELETE RESTRICT);

# + сущность "Комментарии к фотографии"

CREATE TABLE IF NOT EXISTS `photos_comments` (
`id` INT NOT NULL  AUTO_INCREMENT,
`photo_id` INT NOT NULL,
`user_id` INT NOT NULL,
`text` VARCHAR(25) NOT NULL,
PRIMARY KEY (`id`),
FOREIGN KEY (`photo_id`) 
REFERENCES `photos`(`id`) 
ON UPDATE CASCADE
ON DELETE RESTRICT,
FOREIGN KEY (`user_id`) 
REFERENCES `users`(`id`) 
ON UPDATE CASCADE
ON DELETE RESTRICT);

#+сущность лайки к фото

CREATE TABLE IF NOT EXISTS `photos_likes` (
`id` INT NOT NULL AUTO_INCREMENT,
`photo_id` INT NOT NULL,
`user_id` INT NOT NULL,
`recalled` INT(1) NULL DEFAULT NULL,
PRIMARY KEY (`id`),
FOREIGN KEY (`photo_id`) 
REFERENCES `photos`(`id`) 
ON UPDATE CASCADE
ON DELETE RESTRICT,
FOREIGN KEY (`user_id`) 
REFERENCES `users`(`id`) 
ON UPDATE CASCADE
ON DELETE RESTRICT);

#+сущность лайки к комментариям к фото

CREATE TABLE IF NOT EXISTS `photos_comments_likes` (
`id` INT NOT NULL AUTO_INCREMENT,
`comment_id` INT NOT NULL,
`user_id` INT NOT NULL,
`recalled` INT(1) NULL DEFAULT NULL,
PRIMARY KEY (`id`),
FOREIGN KEY (`comment_id`) 
REFERENCES `photo_comments`(`id`) 
ON UPDATE CASCADE
ON DELETE RESTRICT,
FOREIGN KEY (`user_id`) 
REFERENCES `users`(`id`) 
ON UPDATE CASCADE
ON DELETE RESTRICT);

#пользователь не может дважды лайкнуть одну и ту же сущность => + триггер

DELIMITER //
CREATE TRIGGER photo_one_like 
BEFORE INSERT ON `photos_likes` FOR EACH ROW 
BEGIN 
IF EXISTS ( SELECT * FROM `photos_likes` 
WHERE `user_id` = NEW.`user_id` AND `photo_id` = NEW.`photo_id`) 
THEN 
SIGNAL SQLSTATE '45000' 
SET MESSAGE_TEXT = 'Вы уже поставили лайк к данной фотографии' ; 
END IF; 
END //
DELIMITER ;

INSERT INTO `photos` (`owner_id`, `name`) 
VALUES (1,'Hello'), (2,'World'), (4,'Guest');
INSERT INTO `photos_likes` (`user_id`, `photo_id`) 
VALUES (3,1), (7,2), (8,3);

mysql> INSERT INTO `photo_likes` (`user_id`, `photo_id`)
    -> VALUES (3,1);
ERROR 1644 (45000): Вы уже поставили лайк к данной фотографии


DELIMITER //
CREATE TRIGGER photo_comment_one_like 
BEFORE INSERT ON `photos_comments_likes` FOR EACH ROW 
BEGIN 
IF EXISTS ( SELECT * FROM `photos_comments_likes` 
WHERE `user_id` = NEW.`user_id` AND `comment_id` = NEW.`comment_id`) 
THEN 
SIGNAL SQLSTATE '45000' 
SET MESSAGE_TEXT = 'Вы уже поставили лайк к данному комментарию под выбранной фотографией' ; 
END IF; 
END //
DELIMITER ;

INSERT INTO `photos_comments` (`user_id`, `photo_id`, `text`) 
VALUES (1, 3, 'What a brilliant view!'), (7, 2, 'I like it'), (5, 1, 'This is the worst');
INSERT INTO `photos_comments_likes` (`user_id`, `comment_id`) 
VALUES (5,1), (6,2), (9,3);

mysql> INSERT INTO `photos_comments_likes` (`user_id`, `comment_id`)
    -> VALUES (5,1);
ERROR 1644 (45000): Вы уже поставили лайк к данному комментарию под выбранной фотографией

DELIMITER //
CREATE TRIGGER user_profile_one_like 
BEFORE INSERT ON `users_profiles_likes` FOR EACH ROW 
BEGIN 
IF EXISTS ( SELECT * FROM `users_profiles_likes` 
WHERE `user_id` = NEW.`user_id` AND `profile_id` = NEW.`profile_id`) 
THEN 
SIGNAL SQLSTATE '45000' 
SET MESSAGE_TEXT = 'Вы уже поставили лайк профилю данного пользователя' ; 
END IF; 
END //
DELIMITER ;

mysql> INSERT INTO `users_profiles_likes` (`user_id`, `profile_id`)
    -> VALUES (5,2);
ERROR 1644 (45000): Вы уже поставили лайк профилю данного пользователя


#пользователь имеет право отозвать лайк => + процедура, которая поставит recalled = 1
в строке с лайком данного пользователя к данному профилю

DELIMITER //
CREATE PROCEDURE user_profile_delete_like ( user INT(11), profile INT(11))
BEGIN 
UPDATE `users_profiles_likes`
SET .`recalled` = 1
WHERE 
`user_id` = user AND `profile_id` = profile;
END //
DELIMITER ;

INSERT INTO `users_profiles_likes` (`user_id`, `profile_id`) VALUES (3,8);

mysql> CALL user_profile_delete_like (3, 8);
Query OK, 1 row affected (1.19 sec)

mysql> SELECT * FROM `users_profiles_likes` WHERE `user_id`=3 AND `profile_id`=8;

+----+------------+---------+----------+
| id | profile_id | user_id | recalled |
+----+------------+---------+----------+
| 13 |          8 |       3 |        1 |
+----+------------+---------+----------+
1 row in set (1.14 sec)


DELIMITER //
CREATE PROCEDURE user_photo_delete_like ( user INT(11), photo INT(11))
BEGIN 
UPDATE `photos_likes`
SET `recalled` = 1
WHERE 
`user_id` = user AND `photo_id` = photo;
END //
DELIMITER ;

INSERT INTO `photos_likes` (`user_id`, `photo_id`) VALUES (9, 2);

mysql> CALL user_photo_delete_like (9, 2);
Query OK, 1 row affected (1.10 sec)

mysql> SELECT * FROM `photos_likes` WHERE `user_id`=9 AND `photo_id`=2;
+----+----------+---------+----------+
| id | photo_id | user_id | recalled |
+----+----------+---------+----------+
|  6 |        2 |       9 |        1 |
+----+----------+---------+----------+
1 row in set (0.00 sec)


DELIMITER //
CREATE PROCEDURE user_comment_delete_like (user INT(11), comment INT(11))
BEGIN 
UPDATE `photos_comments_likes`
SET `recalled` = 1
WHERE 
`user_id` = user AND `comment_id` = comment;
END //
DELIMITER ;

INSERT INTO `photos_comments_likes` (`user_id`, `comment_id`) VALUES (10,3);

mysql> CALL user_comment_delete_like (10, 3);
Query OK, 1 row affected (1.13 sec)

mysql> SELECT * FROM `photos_comments_likes` WHERE `user_id`=10 AND `comment_id`=3;
+----+------------+---------+----------+
| id | comment_id | user_id | recalled |
+----+------------+---------+----------+
|  5 |          3 |      10 |        1 |
+----+------------+---------+----------+
1 row in set (1.15 sec)


#необходимо иметь возможность выводить список пользователей, поставивших лайки;

DELIMITER //
CREATE PROCEDURE user_profile_likes (profile INT(11))
BEGIN 
SELECT `users`.`login` AS 'Поставили лайки',
`users_profiles`.`content` AS 'Профилю',
`users_profiles_likes`.`recalled` AS 'Отозвано?'
FROM `users_profiles_likes` INNER JOIN `users_profiles` INNER JOIN `users`
WHERE
`users_profiles_likes`.`profile_id` = profile AND
`users_profiles_likes`.`user_id` = `users`.`id` AND
`users_profiles`.`id` = profile;
END //
DELIMITER ;

mysql> CALL user_profile_likes (8);
+-----------------+-------------------------------------------------------------------------------------------+-----------+
| Поставили лайки | Профилю                                                                                   | Отозвано? |
+-----------------+-------------------------------------------------------------------------------------------+-----------+
| Игорь           | Donec lobortis, mauris eget fringilla iaculis, lectus quam porta velit, ut luctus tellus. |         1 |
| Алина           | Donec lobortis, mauris eget fringilla iaculis, lectus quam porta velit, ut luctus tellus. |      NULL |
+-----------------+-------------------------------------------------------------------------------------------+-----------+
2 rows in set (0.00 sec)

Query OK, 0 rows affected (0.12 sec)


DELIMITER //
CREATE PROCEDURE user_photo_likes (photo INT(11))
BEGIN 
SELECT `users`.`login` AS 'Поставили лайки',
`users_profiles`.`content` AS 'Профилю',
`users_profiles_likes`.`recalled` AS 'Отозвано?'
FROM `users_profiles_likes` INNER JOIN `users_profiles` INNER JOIN `users`
WHERE
`users_profiles_likes`.`profile_id` = profile AND
`users_profiles_likes`.`user_id` = `users`.`id` AND
`users_profiles`.`id` = profile;
END //
DELIMITER ;

mysql> CALL user_profile_likes (8);


DELIMITER //
CREATE PROCEDURE user_profile_likes (profile INT(11))
BEGIN 
SELECT `users`.`login` AS 'Поставили лайки',
`users_profiles`.`content` AS 'Профилю',
`users_profiles_likes`.`recalled` AS 'Отозвано?'
FROM `users_profiles_likes` INNER JOIN `users_profiles` INNER JOIN `users`
WHERE
`users_profiles_likes`.`profile_id` = profile AND
`users_profiles_likes`.`user_id` = `users`.`id` AND
`users_profiles`.`id` = profile;
END //
DELIMITER ;

mysql> CALL user_profile_likes (8);
#считать число полученных сущностью лайков 







